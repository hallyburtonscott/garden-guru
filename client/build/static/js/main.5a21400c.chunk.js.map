{"version":3,"sources":["backendRequests.js","WeatherComponents/WeatherBoard.js","MiddleComponents/NewsArticle.js","MiddleComponents/NewsFeed.js","TLComponents/Home.js","TLComponents/AboutPage.js","TLComponents/NavBar.js","MiddleComponents/LoginCard.js","TLComponents/Login.js","MiddleComponents/SignUpCard.js","TLComponents/SignUp.js","GardenComponents/PlantIcon.js","GardenComponents/PlantPage.js","GardenComponents/Garden.js","GardenComponents/PlantCard.js","TLComponents/PlantStore.js","TLComponents/UserPage.js","TLComponents/UserInfo.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","config","SERVERURL","process","PORT","first","last","email","phone","username","password","a","method","url","data","result","getUser","updateUserPreferences","preferences","zip","mode","showPlants","filter","getPlantByAPI","id","getUserPlantConnections","getUserPlants","plantIds","plant_ids","createPlantConnection","attributes","deleteUserPlant","updatePlantConnection","plantId","timestamp","plant_id","getWeather","getNews","query","ktoF","temp","toFixed","useStyles","makeStyles","theme","root","display","flexDirection","weatherHeader","padding","backgroundColor","palette","secondary","weatherBody","notFound","WeatherBoard","useContext","UserContext","useState","weather","setWeather","useEffect","then","res","console","log","classes","tempType","main","humidity","pressure","description","wind","speed","gust","city","name","Card","Typography","variant","className","CardContent","Paper","elevation","style","textDecoration","to","Button","width","plantAvatar","color","primary","NewsArticle","article","author","title","content","urlToImage","CardActionArea","CardMedia","component","alt","image","height","CardHeader","subheader","CardActions","target","href","minWidth","maxWidth","newHeader","marginBottom","NewsFeed","props","prev","sessionStorage","getItem","JSON","parse","articles","news","setNews","Grid","container","spacing","length","map","item","publishedAt","onClick","setItem","stringify","justifyContent","custom","background","header","margin","maxHeight","loginHeader","overflow","loginRequest","weatherBoard","toolBar","alignContent","notifications","LoginRequest","Notifications","plantConnections","setPlantConnections","plant","res2","plants","connections","Date","now","parseInt","water_rate","find","p","Home","loggedIn","AboutPage","flexGrow","menuButton","marginRight","userIcon","tertiary","mainAction","appBar","pageButtons","fontSize","NavBar","AppBar","position","Toolbar","ButtonGroup","label","IconButton","Icon","marginLeft","form","LoginCard","onSuccess","message","setMessage","nameInput","setNameInput","passwordInput","setPasswordInput","TextField","required","value","onChange","e","type","preventDefault","catch","Login","SignUpCard","emailInput","setEmailInput","phoneInput","setPhoneInput","createUser","SignUp","good","danger","red","removeTools","PlantIcon","info","plantClick","infoClick","handleRemove","useRouteMatch","path","last_watered","waterMe","Badge","invisible","Avatar","Tooltip","children","InvertColors","Info","minHeight","plantDescription","PlantPage","clear","setPlant","api_id","binomial_name","main_image_path","avatar","sowing_method","row_spacing","spread","Clear","gardenHeader","gardenBody","cardInfo","Garden","handleUpdate","ids","setIds","handleInfoClick","copy","includes","push","splice","findIndex","sort","b","localeCompare","PlantCard","notifyUpdate","schedule","setSchedule","aria-label","notes","duration","searchBar","plantResults","searchProps","PlantStore","search","setSearch","setPlants","InputProps","placeholder","fullWidth","toolGrid","UserPage","plantStore","getData","card","UserInfo","setMode","setPassword","setZip","FormControl","Select","MenuItem","FormHelperText","user","window","location","reload","action","localStorage","themeLight","createMuiTheme","green","orange","grey","themeDark","createContext","App","userPreferences","setUserPreferences","ContextProvider","Provider","prefChange","pref","ThemeProvider","CssBaseline","Container","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a21400c.chunk.js","sourcesContent":["const axios = require('axios');\nrequire('dotenv').config();\nconst parse = require('postgres-date');\nconst SERVERURL = `http://localhost:${process.env.PORT || 8000}`\n\n\nexport async function createUser(first, last, email, phone, username, password) {\n        const result = await axios({\n            method: 'post',\n            url: SERVERURL + '/signup',\n            data: {\n                first: first,\n                last: last,\n                email: email,\n                phone: phone,\n                username: username,\n                password: password,\n            }\n        });\n        return result;\n}\n\nexport const getUsers = async () => {\n    const result = await axios({\n        method: 'get',\n        url: SERVERURL + '/users',\n    })\n    return result;\n}\n\n\nexport const getUser = async (username, password) => {\n    //console.log('username', username);\n    //console.log(password);\n    const result = await axios({\n        method: 'post',\n        url: SERVERURL + `/login`,\n        data: {\n            username: username,\n            password: password,\n        }\n    });\n    return result;\n}\n\nexport const updateUserPreferences = async (username, password, preferences) => {\n    const {zip, mode} = preferences;\n    const result = await axios({\n        method: 'put',\n        url: SERVERURL + `/users/${username}`,\n        data: {\n            password: password,\n            zip: zip,\n            mode: mode,\n        }\n    })\n    return result;\n}\n/**Plant Related Queries */\nexport const showPlants = async (filter) => {\n    const result = await axios({\n        method: 'get',\n        url: `https://openfarm.cc/api/v1/crops/?filter=${filter}`\n    })\n    return result;\n}\nexport const getPlantByAPI = async (id) =>{\n    const result = await axios({\n        method:'get',\n        url: `https://openfarm.cc/api/v1/crops/${id}`\n    });\n    return result;\n}\n\nexport const getUserPlantConnections = async (username) => {\n    const result = await axios({\n        method:'get',\n        url: `http://localhost:8000/plants/${username}`\n    })\n    return result;\n}\n\nexport const getUserPlants = async (plantIds) =>{\n    const result = await axios({\n        method:'post',\n        url: `http://localhost:8000/getPlants`,\n        data: {\n            plant_ids: plantIds,\n        }\n    });\n    return result;\n}\n\nexport const createPlantConnection = async (username, attributes) => {\n    const result = await axios({\n        method: 'put',\n        url: SERVERURL + `/plants/${username}`,\n        data: {\n            attributes: attributes,\n        }\n    });\n    return result;\n}\nexport const deleteUserPlant = async (username, id) => {\n    const result = await axios({\n        method: 'delete',\n        url: SERVERURL + `/plants/${username}`,\n        data: {\n            id: id,\n        }\n\n    })\n}\n\nexport const updatePlantConnection = async (username, plantId, timestamp) =>{\n    const result = await axios({\n        method: 'post',\n        url: SERVERURL +  `/plants/${username}`,\n        data: {\n            plant_id: plantId,\n            timestamp: timestamp,\n        }\n    })\n    return result;\n}\n/** Weather Related Queries*/\nexport const getWeather = async (zip) => {\n    // return {\n    //     data: null,\n    // }\n    const result = await axios({\n        method: 'get',\n        url: SERVERURL + `/weather/${zip}`,\n    })\n    return result;\n}\n\n/** Icon Related Queries*/\n// export const getIcon = async(query) => {\n//     const result = await axios({\n//         method: 'get',\n//         url: SERVERURL + `/icons/${query}`\n//     })\n//}\n\n/** News realted Queries */\nexport const getNews = async(query) => {\n    const result = await axios({\n        method: 'get',\n        url: SERVERURL +  `/news/${query}`\n    });\n\n    return result;\n}\n\n","import React, {useContext, useEffect, useState} from 'react';\nimport {Button, Card, CardContent, makeStyles, Paper} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {getWeather} from \"../backendRequests\";\nimport {Link} from \"react-router-dom\";\nimport {UserContext} from \"../App\";\n\nfunction ktoF(temp) {\n    const num = (temp - 273.15) * (9 / 5) + 32;\n    return num.toFixed(2);\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    weatherHeader: {\n        padding: 10,\n        backgroundColor: theme.palette.secondary[200],\n    },\n    weatherBody: {\n        padding: 10,\n    },\n    notFound: {\n        backgroundColor: theme.palette.secondary[200],\n    }\n\n}));\nconst WeatherBoard = () => {\n    const preferences = useContext(UserContext);\n    const [weather, setWeather] = useState(null);\n    useEffect(() => {\n            getWeather(preferences['zip']).then(res => {\n                setWeather(res.data);\n                console.log(res.data);\n            })\n       console.log('useEffect')\n\n    }, []);\n    const classes = useStyles();\n    const [tempType, setTempType] = useState('F');\n\n\n    if (weather) {\n        const {temp, humidity, pressure} = weather.main;\n        const {main, description} = weather.weather[0];\n        const {speed, gust} = weather.wind;\n        const city = weather.name;\n        return (\n            <Card>\n                <Typography variant='h4' className={classes.weatherHeader}>\n                    Weather today in {city} </Typography>\n                <CardContent>\n                    <Typography variant='h6'> {`Temperature: ${ktoF(temp)} ${tempType}`}  </Typography>\n                    <Typography variant='h6'> {`Humidity: ${humidity} %`}  </Typography>\n                    <Typography variant='h6'> {`Pressure: ${pressure}`}  </Typography>\n                    <Typography variant='h6'> {`Currently: ${description}`}  </Typography>\n                    <Typography variant='h6'> {`Wind: Speed: ${speed} mph, Gust: ${gust} mph`}  </Typography>\n                </CardContent>\n            </Card>\n        )\n    } else {\n        return (\n\n            <Paper className={classes.notFound} elevation={2}><Typography variant='h6'>We could not find any\n                weather information. Make\n                sure your ZIP code is correct</Typography>\n                <Link style={{textDecoration: 'none'}} to={`/users/${preferences.username}/info`}><Button\n                    variant={'outlined'}> Settings</Button> </Link>\n            </Paper>)\n    }\n\n}\n\n\nexport default WeatherBoard;","import React from 'react';\nimport {Card, CardActionArea, CardActions, CardContent, CardHeader, CardMedia, makeStyles} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => {\n    return ({\n        root: {\n           width: '100%',\n        },\n        plantAvatar: {\n            color: theme.palette.secondary[400],\n            backgroundColor: theme.palette.primary[300],\n        }\n\n    })\n});\nconst NewsArticle = ({article}) => {\n        const classes = useStyles();\n        const {author, title, content, url, urlToImage, description} = article;\n        return (\n            <Card className={classes.root}>\n                <CardActionArea>\n                    <CardMedia component='img'\n                               alt={'article-title'}\n                               image={urlToImage}\n                               height={150}\n                               width={50}>\n                    </CardMedia>\n                </CardActionArea>\n                <CardHeader title={title} subheader={author}/>\n                <CardContent>\n                    {description}\n                </CardContent>\n                <CardActions>\n                    <Typography>Full Article: <a target ='_blank' href={`${url}`}>{url}</a>\n                    </Typography>\n                </CardActions>\n            </Card>\n\n        )\n    }\n\n;\n\nexport default NewsArticle;","import React, {useState} from 'react';\nimport {Button, Grid, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport NewsArticle from \"./NewsArticle\";\nimport {getNews} from \"../backendRequests\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 50,\n        maxWidth: 500,\n        padding: 50\n    },\n    newHeader:{\n        backgroundColor: theme.palette.secondary[200],\n        marginBottom: 15,\n    }\n}))\nconst NewsFeed = (props) => {\n    const [search, setSearch] = useState('');\n\n    const [news, setNews] = useState(prev => {\n        if (sessionStorage.getItem('news')) {\n            return JSON.parse(sessionStorage.getItem('news')).articles\n        } else\n            return [];\n\n    })\n    const classes = useStyles();\n    const searchProps = {\n        fontSize: 30,\n    }\n\n\n\n    return (\n        <Paper className={classes.root} elevation={3}>\n            <Typography variant='h4' className={classes.newHeader}>\n                Gardening News\n            </Typography>\n            <Grid container spacing={2}>\n                {news.length > 0 && news.map(article => {\n                    return (\n                        <Grid item key={article.publishedAt}>\n                            <NewsArticle key={article.publishedAt} article={article}/>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n\n            <Button variant='contained' onClick={() => {\n                getNews('gardening').then(res => {\n                    if (res) {\n                        setNews(res.data.articles);\n                        sessionStorage.setItem('news', JSON.stringify(res.data))\n                    }\n                })\n            }}>Search! </Button>\n        </Paper>\n    );\n}\n\nexport default NewsFeed;","import React, {useContext, useEffect, useState} from 'react';\nimport {Button, Card, CardContent, CardHeader, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport WeatherBoard from \"../WeatherComponents/WeatherBoard\";\nimport NewsFeed from \"../MiddleComponents/NewsFeed\";\nimport {UserContext} from \"../App\";\nimport {Link} from \"react-router-dom\";\nimport {getUserPlantConnections, getUserPlants} from \"../backendRequests\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor: theme.custom.background[200],\n    },\n    header: {\n        backgroundColor: theme.palette.primary[400],\n        margin: 20,\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        margin: 30,\n        maxHeight: 900,\n    },\n    loginHeader: {\n        backgroundColor: theme.palette.primary[400],\n    },\n    news: {\n        overflow: 'scroll',\n    },\n    loginRequest: {\n        maxHeight: 300,\n        maxWidth: 300,\n    },\n    weatherBoard:{\n        maxHeight: 600,\n    },\n    toolBar:{\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'space-evenly',\n        justifyContent: 'space-evenly',\n    },\n    notifications: {\n        maxHeight: 500,\n        overflow: 'scroll',\n    },\n\n\n}));\n\nconst LoginRequest = () => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.loginRequest}>\n            <CardHeader className={classes.loginHeader}\n                        title=' Create your Account Today'/>\n            <CardContent>\n                <Typography variant='h5'>\n                    Enjoy Full Access to the Gardening Database and Water Monitoring.\n                </Typography>\n                <Link to='/signup' style={{'textDecoration': 'none'}}><Button variant='contained'> Sign Up</Button> </Link>\n            </CardContent>\n        </Card>\n    )\n}\nconst Notifications = () => {\n    const preferences = useContext(UserContext);\n    const [plantConnections, setPlantConnections] = useState({});\n    const getData = () => {\n        getUserPlantConnections(preferences.username).then(res => {\n            if (res && res.data != null) {\n                getUserPlants(res.data.map(plant => plant['plant_id'])).then(res2 => {\n                    setPlantConnections({\n                        plants: res2.data,\n                        connections: res.data,\n                    })\n                    // setConnections(res.data);\n                    // setPlants(res2.data);\n                });\n            }\n        })\n    }\n    useEffect(() => {\n        getData();\n    }, []);\n    const classes = useStyles();\n    let connections;\n    if(plantConnections.connections){\n        connections = plantConnections.connections;\n        connections =  connections.filter(plant => {\n            const difference = (Date.now() - parseInt(plant['last_watered'])) / (3600 * 1000);\n            const waterMe = difference - plant.water_rate;\n            return waterMe > 0;\n        });\n    }\n\n    return (\n        <Card className={classes.notifications}>\n            <CardHeader className={classes.loginHeader}\n                        title='Notifications'/>\n            <CardContent>\n                <Typography variant='h5'>\n                    {connections && (connections.length > 0 ? <div>\n                        {`You need to water the following plant${connections.length == 1 ? '': 's'}`}:\n                        <ol>\n                            {connections.map(plant=> <li key={plant.plant_id}>{plantConnections.plants.find(p => p.plant_id == plant.plant_id)['name']} </li>)}\n                            </ol>\n                       Take a break and water your plants!\n                    </div>:<div> You're garden is all good :)</div> )}\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\nconst Home = ({}) => {\n        const preferences = useContext(UserContext);\n        const classes = useStyles();\n        return (\n            <div className={classes.root}>\n                <Paper className={classes.header} elevation={3}>\n                    <Typography variant='h1'>Garden Guru</Typography>\n                    <Typography variant='h3'>Your Central Gardening Hub</Typography>\n                </Paper>\n                <div className={classes.content}>\n                    <div className={classes.news}>\n                        <NewsFeed/>\n                    </div>\n                    <div className={classes.toolBar}>\n                        {(preferences.loggedIn ? <div className={classes.weatherBoard}> <WeatherBoard/></div> : <LoginRequest/>)}\n                        <div className={!classes.notifications}>\n                            <Notifications />\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n\n;\n\nexport default Home;","import React from 'react';\n\nconst AboutPage = (props) => (\n    <div>Welcome to the About page</div>\n);\n\nexport default AboutPage;","import React, {useContext} from 'react';\nimport {AppBar, Button, ButtonGroup, Icon, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport {Link} from \"react-router-dom\";\nimport {UserContext} from '../App.js'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        justifyContent: \"center\",\n        flexGrow: 1,\n    },\n    userIcon: {\n        backgroundColor: theme.palette.tertiary[200],\n    },\n    mainAction: {\n        marginRight: 50,\n        backgroundColor: theme.palette.primary[200],\n    },\n    appBar: {\n        padding: 30,\n    },\n    pageButtons:{\n        fontSize: 30,\n    }\n\n}));\nconst NavBar = (props) => {\n    const preferences = useContext(UserContext);\n    if (preferences.loggedIn == false) {\n        //console.log('you are not logged in');\n    } else {\n        //console.log('now you ARE logged in!');\n    }\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AppBar position='fixed' className={classes.appBar}>\n                <Toolbar>\n                        <Typography variant='h4' className={classes.title}>\n                            <Link to='/' style={{textDecoration: 'none'}}>\n                            Garden Guru\n                            </Link>\n                        </Typography>\n\n                    <ButtonGroup spacing={20} className={classes.mainAction}>\n                        <Button label='Search For Plants'><Link to='/search' style={{textDecoration: 'none'}}> Search\n                            For Plants </Link></Button>\n                        {preferences.loggedIn &&\n                        <Button><Link to={`/users/${preferences.username}`} style={{'textDecoration': 'none'}}>My\n                            Garden </Link></Button>}\n                    </ButtonGroup>\n                    {(preferences.loggedIn ?\n                        <Typography className={classes.pageButtons}>\n                            <Link to={`/users/${preferences.username}/info`} style={{textDecoration: 'none'}}>\n                                <IconButton className={classes.userIcon} >\n                                    <Icon>\n                                        {(preferences.username ? preferences.username[0] : '')}\n                                    </Icon>\n                                </IconButton>\n                            </Link>\n                        </Typography> : <ButtonGroup spacing={2}>\n                            <Link to='/login'> <Button color='secondary' variant='contained'> Login </Button></Link>\n                            <Link to='/signup'><Button color='secondary' variant='contained'>Signup</Button></Link>\n                        </ButtonGroup>)\n                    }\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default NavBar;","import {React, useState} from 'react';\nimport {Button, Card, CardContent, CardHeader, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport {getUser} from \"../backendRequests\";\n\nconst useStyles = makeStyles((theme) => {\n    return ({\n        root: {\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            maxWidth: 345,\n            minWidth: 200,\n        },\n        form: {\n            margin: theme.spacing(1),\n        }\n    })\n});\n\n\nconst LoginCard = ({onSuccess}) => {\n    function handleLogin(e) {\n        e.preventDefault();\n\n        getUser(nameInput, passwordInput).then(result => {\n                //localStorage.setItem('test', 'hello');\n                console.log(result);\n                setMessage('success! Logging you in');\n                console.log(result.data);\n                onSuccess(\n                    {\n                        loggedIn: 'true',\n                        username: result.data.username,\n                        zip: result.data['zip'],\n                    });\n            }\n        ).catch(e => {\n            setMessage('We could not find a username with that password. Try again');\n        })\n    }\n\n    const [message, setMessage] = useState('');\n    const [nameInput, setNameInput] = useState('');\n    const [passwordInput, setPasswordInput] = useState('');\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Card>\n                <CardHeader title='Login Here' subheader='If you have an account already, log in here'/>\n                <CardContent>\n                    <TextField className={classes.form} required id='outlined-required' label='Username'\n                               variant=\"outlined\" value={nameInput}\n                               onChange={(e) => setNameInput(e.target.value)}/>\n                    <TextField required id='password-required' type='password' label='Password' variant=\"outlined\"\n                               value={passwordInput}\n                               onChange={(e) => setPasswordInput(e.target.value)}/>\n                </CardContent>\n                <Button variant='contained' onClick={handleLogin}>Log In</Button>\n                <Typography>\n                    {message}</Typography>\n            </Card>\n        </div>\n    )\n};\n\nexport default LoginCard;","import React from 'react';\nimport LoginCard from \"../MiddleComponents/LoginCard\";\nimport {Button} from \"@material-ui/core\";\nimport {updateUserPreferences} from \"../backendRequests\";\nimport {Link} from 'react-router-dom'\n\nconst Login = ({onSuccess}) => {\n        return (\n            <div>\n                <LoginCard onSuccess={onSuccess}/>\n                {/*<Button variant='outlined'><Link to='/'> HOME</Link></Button>*/}\n            </div>\n\n        )\n    }\n\n;\n\nexport default Login;","import {Button, Card, CardContent, CardHeader, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport {React, useState} from \"react\";\nimport {createUser} from \"../backendRequests\";\n\nconst useStyles = makeStyles((theme) => {\n    return ({\n        root: {\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            maxWidth: 345,\n            minWidth: 200,\n        },\n        form: {\n            margin: theme.spacing(1),\n        }\n    })\n});\n\n\nconst SignUpCard = ({onSuccess}) => {\n    function handleLogin(e) {\n        e.preventDefault();\n\n        createUser( 'Scott' , 'Hallyburton', emailInput, phoneInput, nameInput, passwordInput).then(result => {\n                setMessage('Account Created Successfully!');\n                onSuccess(\n                    {\n                        loggedIn: 'true',\n                        username: nameInput,\n                        password: passwordInput,\n                        email: emailInput,\n                        phone: phoneInput,\n                    });\n            }\n        ).catch(e => {\n            setMessage('Username and or Email already exists, try again');\n        })\n    }\n\n    const [message, setMessage] = useState('');\n    const [nameInput, setNameInput] = useState('');\n    const [passwordInput, setPasswordInput] = useState('');\n    const [emailInput, setEmailInput] = useState('');\n    const [phoneInput, setPhoneInput] = useState('');\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Card>\n                <CardHeader title='Create A New Account' subheader='Get planting today!'/>\n                <CardContent>\n                    <TextField className={classes.form} required id='outlined-required' label='Username'\n                               variant=\"outlined\" value={nameInput}\n                               onChange={(e) => setNameInput(e.target.value)}/>\n                    <TextField required id='password-required' type='password' label='Password' variant=\"outlined\"\n                               value={passwordInput}\n                               onChange={(e) => setPasswordInput(e.target.value)}/>\n                    <TextField required id='outlined-required' label='Email' variant=\"outlined\"\n                               value={emailInput}\n                               onChange={(e) => setEmailInput(e.target.value)}/>\n                    <TextField required id='outlined-required' label='Phone Number' variant=\"outlined\"\n                               value={phoneInput}\n                               onChange={(e) => setPhoneInput(e.target.value)}/>\n                </CardContent>\n                <Button variant='contained' onClick={handleLogin}>Log In</Button>\n                <Typography>\n                    {message}</Typography>\n            </Card>\n        </div>\n    )\n};\n\nexport default SignUpCard;","import React from 'react';\nimport LoginCard from \"../MiddleComponents/LoginCard\";\nimport {Button} from \"@material-ui/core\";\nimport {updateUserPreferences} from \"../backendRequests\";\nimport SignUpCard from \"../MiddleComponents/SignUpCard\"\n\n\nconst SignUp = ({onSuccess}) => {\n        return (\n            <div>\n                <SignUpCard onSuccess={onSuccess}/>\n            </div>\n\n        )\n    }\n\n;\n\nexport default SignUp;\n","import React from \"react\";\nimport {Avatar, Badge, Button, makeStyles, Tooltip} from \"@material-ui/core\";\nimport {red} from \"@material-ui/core/colors\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Info, InvertColors} from \"@material-ui/icons\";\nimport {Link, useRouteMatch} from 'react-router-dom';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n    good: {\n        minWidth: 200,\n        maxWidth: 300,\n        height: 200,\n        backgroundColor: theme.palette.primary[300],\n    },\n    danger: {\n        minWidth: 175,\n        maxWidth: 300,\n        height: 175,\n        backgroundColor: red[400],\n    },\n    removeTools: {\n        display: 'flex',\n        flexDirection: 'column',\n    }\n}))\n\n\nfunction PlantIcon({plant, info, plantClick, infoClick, handleRemove}) {\n    //console.log(plant);\n    let {path, url} = useRouteMatch();\n    //console.log(url);\n    const classes = useStyles();\n    const {last_watered, water_rate} = info;\n    const time = parseInt(last_watered);\n    const difference = (Date.now() - parseInt(last_watered)) / (3600 * 1000);\n    const waterMe = difference - water_rate;\n    const handlePlantClick = () => {\n        plantClick(plant.plant_id);\n    }\n    return (\n        <Badge color='secondary' variant='dot' invisible={true}>\n            <Avatar className={(waterMe < 0 ? classes.good : classes.danger)} label={plant.name}>\n                {waterMe > 0 && <IconButton onClick={handlePlantClick}>\n                    <Tooltip title={'water'} children={<InvertColors/>}/>\n                </IconButton>}\n                <Typography>\n                    {plant.name}\n                </Typography>\n\n                <Link to={`./${plant.plant_id}`}> <IconButton onClick={() => infoClick(plant.plant_id)}>\n                    <Tooltip title='plant info' children={<Info/>}/>\n                </IconButton></Link>\n            </Avatar>\n            <div className={classes.removeTools}>\n                <span> {-waterMe > 0 ? `${-waterMe.toFixed(2)} Hours Remaining` : `${waterMe.toFixed(2)} Hours Late`}</span>\n                <Button variant='contained' onClick={()=> handleRemove(plant.plant_id)}> Remove Plant</Button>\n            </div>\n\n        </Badge>\n    )\n}\n\nexport default PlantIcon;","import React, {useEffect, useState} from 'react';\nimport {\n    Avatar,\n    CardActionArea,\n    CardActions,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    IconButton, Link,\n    makeStyles\n} from \"@material-ui/core\";\nimport {useParams, useHistory} from 'react-router-dom'\nimport {getPlantByAPI, getUserPlants} from \"../backendRequests\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport {Clear, Delete} from \"@material-ui/icons\";\n\n\nconst useStyles = makeStyles((theme) => {\n    return ({\n        root: {\n            maxWidth: 300,\n            minWidth: 200,\n            minHeight: 400,\n        },\n        plantAvatar: {\n            color: theme.palette.secondary[400],\n            backgroundColor: theme.palette.primary[300],\n        },\n        plantDescription: {}\n\n\n    })\n});\nconst PlantPage = ({id, clear}) => {\n\n    const classes = useStyles();\n    const [plant, setPlant] = useState(null);\n    console.log(id);\n    useEffect(() => {\n        getUserPlants([id]).then(result => {\n            if (result.data[0] != null) {\n                getPlantByAPI(result.data[0].api_id).then(result => {\n                    setPlant(result.data.data.attributes);\n                })\n            }\n\n        })\n    }, [])\n\n        return (\n            <div>\n                {plant &&\n                <Card className={classes.root}>\n                    <CardActionArea>\n                        <CardMedia component='img'\n                                   alt={plant.binomial_name}\n                                   image={plant.main_image_path}\n                                   height={150}>\n                        </CardMedia>\n                    </CardActionArea>\n                    <CardHeader avatar={\n                        <Avatar className={classes.plantAvatar}>\n                            P\n                        </Avatar>\n                    } title={plant.name} subheader={plant.binomial_name}>\n                    </CardHeader>\n                    <CardContent>\n                        <Typography className={classes.plantDescription}>\n                            Sowing Method: {plant.sowing_method || 'No method found'}\n                        </Typography>\n                        <Typography>\n                            Row Spacing: {plant.row_spacing ? plant.row_spacing + 'cm' : 'N/A'}\n                        </Typography>\n                        <Typography>\n                            Spread: {plant.spread ? plant.spread + 'cm': 'N/A'}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <IconButton onClick={() => clear(id)}>\n                            <Clear/>\n                        </IconButton>\n                    </CardActions>\n                </Card>}\n            </div>\n        )\n}\n\nexport default PlantPage;","import React, {useContext, useState} from 'react';\nimport {Card, CardContent, Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport PlantIcon from './PlantIcon';\nimport {UserContext} from \"../App\";\nimport {useRouteMatch} from \"react-router-dom\";\nimport PlantPage from \"./PlantPage\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    gardenHeader: {\n        padding: 10,\n        backgroundColor: theme.palette.primary[200],\n    },\n    gardenBody: {\n        padding: 10,\n    },\n    cardInfo: {\n        display: 'flex',\n        flexDirection: 'row',\n    }\n\n}));\n\n\nconst Garden = ({plants = [], connections, handleUpdate, handleRemove}) => {\n    const classes = useStyles();\n    let {path, url} = useRouteMatch();\n    const preferences = useContext(UserContext);\n    //const [info, setInfo] = useState(`${path}/0`);\n    const [ids, setIds] = useState([]);\n    const handleInfoClick = (id) => {\n        setIds(prev => {\n            let copy = [...prev];\n            if (copy.includes(id)) {\n                return prev;\n            } else {\n                copy.push(id);\n                return copy;\n            }\n\n        })\n    }\n    const clear = (id) => {\n        setIds(prev => {\n            let copy = [...prev];\n            copy.splice(copy.findIndex(e => e == id), 1);\n            return copy;\n        })\n\n    }\n\n    return (\n        <Card className={classes.root}>\n            <Typography variant='h4' className={classes.gardenHeader}>\n                My Garden\n            </Typography>\n            <CardContent>\n                <Grid className={classes.gardenBody} container spacing={3}>\n                    {(plants.length > 0 ? plants.sort((a, b) => a.name.localeCompare(b.name)).map(plant => {\n                        return (\n                            <Grid item key={plant.plant_id}>\n                                <PlantIcon plant={plant} info={connections.find(e => e.plant_id == plant.plant_id)}\n                                           plantClick={handleUpdate} infoClick={handleInfoClick}\n                                           handleRemove={handleRemove}/>\n                            </Grid>)\n                    }) : <div> No plants to share :( </div>)}\n                </Grid>\n            </CardContent>\n            <CardContent className={classes.cardInfo}>\n                {ids.length > 0 && ids.map(id =>\n                    <PlantPage key={id} id={id} clear={clear}/>\n                )}\n            </CardContent>\n\n            {/*<CardActions>*/}\n            {/*    <Tooltip title={'Water All'}>*/}\n            {/*        <IconButton>*/}\n            {/*            <InvertColors/>*/}\n            {/*        </IconButton>*/}\n            {/*    </Tooltip>*/}\n            {/*</CardActions>*/}\n\n        </Card>\n    );\n\n}\n\n\nexport default Garden;","import {React, useContext, useState} from 'react';\nimport {\n    Avatar,\n    CardActionArea,\n    CardActions,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    makeStyles,\n    TextField\n} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport AddIcon from '@material-ui/icons/Add';\nimport {UserContext} from \"../App\";\nimport {createPlantConnection} from \"../backendRequests\";\nimport {Info} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => {\n    return ({\n        root: {\n            maxWidth: 300,\n            minWidth: 200,\n            minHeight: 400,\n        },\n        plantAvatar: {\n            color: theme.palette.secondary[400],\n            backgroundColor: theme.palette.primary[300],\n        },\n        plantDescription: {\n\n        }\n\n\n    })\n});\nconst PlantCard = ({plant, notifyUpdate}) => {\n    //const {url, info} = image;\n    const classes = useStyles();\n    const preferences = useContext(UserContext);\n    const [schedule, setSchedule] = useState(24);\n    const createConnection = () => {\n        console.log(plant);\n        const attributes = {\n            api_id: plant.id,\n            custom: true,\n            name: plant.attributes.name,\n            notes: 'none',\n            last_watered: Date.now(),\n            water_rate: schedule,\n            duration: 60,\n        }\n        createPlantConnection(preferences.username, attributes).then(notifyUpdate);\n    }\n    const {binomial_name, name, main_image_path} = (plant ? plant.attributes : {});\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia component='img'\n                           alt={binomial_name}\n                           image={main_image_path}\n                           height={150}>\n                </CardMedia>\n            </CardActionArea>\n            <CardHeader avatar={\n                <Avatar className={classes.plantAvatar}>\n                    P\n                </Avatar>\n            } title={name} subheader={binomial_name}>\n            </CardHeader>\n            <CardContent>\n                <Typography className={classes.plantDescription}>\n                    Sowing Method: {plant.attributes.sowing_method || 'No method found'}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <IconButton aria-label='mark favorite'>\n                    <FavoriteIcon/>\n                </IconButton>\n                {(preferences.loggedIn == 'true') && <IconButton onClick={createConnection}>\n                    <AddIcon/>\n                </IconButton>}\n\n                <IconButton>\n                    <Info/>\n                </IconButton>\n                <Typography>\n                    Water every <TextField value ={schedule} onChange={(e)=> setSchedule(e.target.value)}/> Hours\n                </Typography>\n\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default PlantCard;","import React, {useState} from 'react';\nimport {Grid, makeStyles, Paper, TextField} from \"@material-ui/core\";\nimport {showPlants} from \"../backendRequests\";\nimport PlantCard from \"../GardenComponents/PlantCard\";\n\n\nconst useStyles = makeStyles((theme) => {\n    return ({\n        root: {},\n        searchBar: {\n            margin: '20px',\n        },\n        plantResults: {\n            display: 'flex',\n            justifyContent: 'space-evenly',\n        }\n\n\n    })\n});\nconst searchProps ={\n    fontSize: 30,\n}\nconst PlantStore = ({notifyUpdate}) => {\n    const classes = useStyles();\n    const [search, setSearch] = useState('');\n    const [plants, setPlants] = useState([]);\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.searchBar}>\n                <TextField InputProps={searchProps} id='search-bar' placeholder='Search Plants here!' fullWidth value={search} onChange={(e) => {\n                    setSearch(e.target.value);\n                    showPlants(e.target.value).then(res => {\n                        if(res.data.data.length > 0){\n                        setPlants(res.data.data);\n                        }\n                    })\n\n                }\n                }/>\n\n\n            </Paper>\n            <Grid container spacing={3} className={classes.plantResults}>\n                {(plants.length > 0 && plants.map(plant => {\n                    return (\n                        <Grid item key={plant.id}>\n                            <PlantCard notifyUpdate={notifyUpdate} plant={plant}/>\n                        </Grid>\n                    )\n                }))}\n            </Grid>\n\n        </div>\n    );\n}\n\n\nexport default PlantStore;","import React, {useContext, useEffect, useState} from 'react';\nimport {UserContext} from \"../App\";\nimport {\n    deleteUserPlant,\n    getUserPlantConnections,\n    getUserPlants,\n    getWeather,\n    updatePlantConnection\n} from \"../backendRequests\";\nimport {Button, Grid, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport {Link, useRouteMatch} from \"react-router-dom\";\nimport Garden from '../GardenComponents/Garden'\nimport WeatherBoard from \"../WeatherComponents/WeatherBoard\";\nimport PlantStore from \"./PlantStore\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: 1200,\n    },\n    header: {\n        margin: 50,\n    },\n    toolGrid: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n    },\n    notFound: {\n        backgroundColor: theme.palette.secondary[200],\n    }\n}));\nconst UserPage = (props) => {\n    let {path, url} = useRouteMatch();\n    const classes = useStyles();\n    const [plantConnections, setPlantConnections] = useState({});\n    // const [connections, setConnections] = useState([]);\n    const [weather, setWeather] = useState(null);\n    const [plantStore, setPlantStore] = useState(true);\n    const preferences = useContext(UserContext);\n    const {username, email, phone} = preferences;\n\n\n    const getData = () => {\n        getUserPlantConnections(preferences.username).then(res => {\n            if (res && res.data != null) {\n                getUserPlants(res.data.map(plant => plant['plant_id'])).then(res2 => {\n                    setPlantConnections({\n                        plants: res2.data,\n                        connections: res.data,\n                    })\n                    // setConnections(res.data);\n                    // setPlants(res2.data);\n                });\n            }\n        })\n    }\n    useEffect(() => {\n        getData();\n    }, []);\n    //console.log('I reloaded');\n    return (\n        <div className={classes.root}>\n            <Typography variant='h2' className={classes.header}>\n                Welcome to your garden, {username}\n            </Typography>\n            <Grid container spacing={2} className={classes.toolGrid}>\n                <Grid item>\n                   <WeatherBoard />\n                </Grid>\n                <Grid item>\n                    <Garden plants={plantConnections.plants} connections={plantConnections.connections}\n                            handleUpdate={(plant_id) => {\n                                updatePlantConnection(preferences.username, plant_id, Date.now()).then(getData);\n                            }} handleRemove={(id) => {\n                        deleteUserPlant(preferences.username, id).then(getData);\n                    }}/>\n                </Grid>\n\n            </Grid>\n\n            {plantStore && <PlantStore notifyUpdate={getData}/>}\n        </div>\n    )\n\n}\n\nexport default UserPage;","import React, {useContext, useState} from 'react';\nimport {\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    FormControl,\n    FormHelperText,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField\n} from \"@material-ui/core\";\nimport {UserContext} from \"../App\";\nimport {getUser, updateUserPreferences} from \"../backendRequests\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: 'center',\n    },\n    header: {\n        //backgroundColor: theme.palette.primary[400],\n        margin: 20,\n        maxWidth: 600,\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column', margin: 30,\n        justifyContent: 'center',\n        alignContent: 'space-evenly'\n    },\n    card: {\n        maxWidth: 500,\n    },\n\n}));\nconst UserInfo = ({onSuccess}) => {\n        const preferences = useContext(UserContext);\n        const [message, setMessage] = useState('');\n        const [mode, setMode] = useState(preferences.mode || 'light');\n        const [change, setChange] = useState(false);\n        const [password, setPassword] = useState('');\n        const classes = useStyles();\n        const [zip, setZip] = useState(preferences.zip || 0);\n        const modes = ['light', 'dark'];\n        return (\n            <div className={classes.root}>\n                <Card elevation={3} className={classes.header}>\n                    <CardHeader title=\"User Settings\" className={classes.title}/>\n                    <CardContent className={classes.content}>\n                        <FormControl>\n                            <Select value={mode} placeholder='mode' onChange={(e) => setMode(e.target.value)}>\n                                {modes.map(mode => (\n                                    <MenuItem value={mode}>{mode}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                            <FormHelperText>Theme</FormHelperText>\n                        </FormControl>\n\n\n                        <TextField value={zip} type='number' onChange={(e) => setZip((e.target.value))} label={`ZIP code`}/>\n                        <TextField type='password' label='Enter Password to Make Changes' value={password}\n                                   onChange={(e) => setPassword(e.target.value)}/>\n                        {message}\n                        <Button variant='outlined' onClick={() => {\n                            const action = async () => {\n                                try {\n                                    await updateUserPreferences(preferences.username, password, {zip: zip, mode: mode});\n                                    //console.log('got here');\n                                    const user = await getUser(preferences.username, password);\n                                    setMessage('success!');\n                                    console.log(user.data['zip']);\n                                    onSuccess(\n                                        {\n                                            loggedIn: 'true',\n                                            username: user.data.username,\n                                            zip: user.data['zip'],\n                                            mode: user.data['mode'],\n                                        });\n                                    // window.location.reload();\n                                    //console.log(user);\n                                } catch (e) {\n                                    setMessage('This password is incorrect');\n                                    console.log(e);\n                                }\n                                window.location.reload();\n                            }\n                            action();\n                        }}>Apply Changes</Button>\n                        <Button variant='outlined' onClick={() => {\n                            localStorage.clear();\n                            sessionStorage.clear();\n                            window.location.reload();\n                        }}>Log Out</Button>\n                    </CardContent>\n                </Card>\n\n            </div>\n        );\n    }\n\n;\n\nexport default UserInfo;","import './App.css';\nimport {createContext, useState} from 'react';\nimport {Container, createMuiTheme, ThemeProvider} from \"@material-ui/core\";\nimport {green, grey, orange} from \"@material-ui/core/colors\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Home from './TLComponents/Home';\nimport AboutPage from \"./TLComponents/AboutPage\";\nimport NavBar from \"./TLComponents/NavBar\";\nimport Login from \"./TLComponents/Login\";\nimport SignUp from \"./TLComponents/SignUp\";\nimport UserPage from \"./TLComponents/UserPage\";\nimport PlantStore from \"./TLComponents/PlantStore\";\nimport UserInfo from \"./TLComponents/UserInfo\";\n\nconst themeLight = createMuiTheme({\n    palette: {\n        primary: green,\n        secondary: orange,\n        tertiary: grey,\n        type:'light',\n    },\n    custom: {\n        background: green,\n    }\n\n});\n\nconst themeDark = createMuiTheme({\n    palette: {\n        primary: green,\n        secondary: orange,\n        tertiary: grey,\n        type:'dark',\n    },\n    custom: {\n        background: 'dark',\n    }\n})\n\nexport const UserContext = createContext('scotch'\n)\n\nfunction App() {\n    const [test, setTest] = useState(null);\n   // console.log('current local storage', localStorage.getItem('currentUser'));\n    //const [mode, setMode] = useState('light');\n    //const [mode, setMode] = useState('light')\n    const [userPreferences, setUserPreferences] = useState({\n        loggedIn: localStorage.getItem('loggedIn'),\n        username: localStorage.getItem('currentUser'),\n        mode: localStorage.getItem('mode'),\n        zip: localStorage.getItem('zip'),\n    })\n    const ContextProvider = UserContext.Provider;\n    const prefChange = (pref) => {\n        localStorage.setItem('loggedIn', 'true');\n        localStorage.setItem('currentUser', pref.username);\n        localStorage.setItem('zip', pref['zip']);\n        localStorage.setItem('mode', pref.mode || userPreferences.mode)\n       // setTheme(pref.mode);\n        setUserPreferences(pref);\n\n    }\n    const mode = userPreferences.mode;\n    let theme = themeLight;\n    switch(mode){\n        case 'light':\n            theme = themeLight;\n            break;\n        case 'dark':\n            theme = themeDark;\n            break;\n\n    }\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n        <div className={'back-ground'}>\n            <ContextProvider value={userPreferences}>\n                <Router>\n                        <Container maxWidth='xl'>\n                            <NavBar/>\n                            <div className='App'>\n                                <Switch>\n                                    <Route exact path=\"/\">\n                                        <Home/>\n                                    </Route>\n                                    <Route path=\"/about\">\n                                        <AboutPage/>\n                                    </Route>\n                                    <Route path=\"/login\">\n                                        <Login onSuccess={(pref) => prefChange(pref)}/>\n                                    </Route>\n                                    <Route path=\"/signup\">\n                                        <SignUp onSuccess={(pref) => {\n                                            prefChange(pref);\n                                        }}/>\n                                    </Route>\n                                    <Route exact path=\"/users/:username\">\n                                        <UserPage/>\n                                    </Route>\n                                    <Route path=\"/search\">\n                                        <PlantStore/>\n                                    </Route>\n                                    <Route exact path='/users/:username/info'>\n                                        <UserInfo onSuccess={(pref) => prefChange(pref)}/>\n                                    </Route>\n                                </Switch>\n                            </div>\n                        </Container>\n                </Router>\n            </ContextProvider>\n        </div>\n        </ThemeProvider>\n    )\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}